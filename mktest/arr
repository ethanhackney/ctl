#!/bin/bash

# bare minimum needed to work
if [ -z "$CTL_ROOT" ]; then
  echo "mkarrtest: CTL_ROOT undefined" 2>&1
  exit 1
fi
if [ -z "$CTL_ENV" ]; then
  echo "mkarrtest: CTL_ENV undefined" 2>&1
  exit 1
fi

# grab environment
source "$CTL_ENV"

# bring in library
source "$CTL_BASH_LIB"

do_or_die echo "/* $CTL_AUTO_GEN_MSG */" >"$CTL_ROOT/test/do/arr.c"

awk -v SILENT=$silent '
BEGIN {
  FS = ","
}

length($0) > 0 {
  cmpfn = $3 # name of comparison function (or empty for default)
  type  = $1 # type of array
  name  = $2 # name of array struct
  dtor  = $4 # destructor

  # save our name for later
  names[++nnames,"name"] = name

  # no comparison function given?
  if (NF < 3) {
    # generate one
    printf("CTL_CMP_DEF(%s, %s)\n", name, type)
    cmpfn = name "_cmp"
  }

  # destructor?
  names[nnames,"dtor"] = NF == 4 ? dtor : "NULL"

  printf("CTL_ARR_TEST(%s, %s, %s)\n", type, name, cmpfn)
}

END {
  print ""
  print "void"
  print "test(void)"
  print "{"
  printf("\tprintf(\"CTL_ARR_DEF tests running...\\n\");\n")
  for (i = 1; i <= nnames; i++) {
    printf("\t%s_test(%s);\n", names[i,"name"], names[i,"dtor"])
    if (!SILENT)
      printf("\tprintf(\"PASSED: %s_test\");\n", names[i])
  }
  printf("\tprintf(\"PASS\\n\");\n")
  print "}"
}
' "$CTL_ROOT/mktest/tab/arr" >>"$CTL_ROOT/test/do/arr.c"
