#!/bin/bash

# bare minimum needed to work
if [ -z "$CTL_ROOT" ]; then
  echo "$(basename $0): CTL_ROOT undefined" 2>&1
  exit 1
fi
if [ -z "$CTL_ENV" ]; then
  echo "$(basename $0): CTL_ENV undefined" 2>&1
  exit 1
fi

# grab environment
source "$CTL_ENV"

# source our bash library
source "$CTL_BASH_LIB"

# verbose mode?
v=0

# parse args
while [ $# -ne 0 ]; do
  case "$1" in
    -v|--verbose)
      v=1
      shift
      ;;
    *)
      arg_bad "$1"
      ;;
  esac
done

# print message if in verbose mode
#
# args:
#  @msg: message
verbose() {
  local msg="$1"

  if [ $v != 0 ]; then
    do_or_die echo "$(basename $0): $msg"
  fi
}

# switch to our directory
docdir=$(dirname $0)
verbose "switching to $docdir"
cd "$docdir"

verbose 'generating docs...'

# templates
tmps=(
  'arr' # dynamic array
)

for ((i = 0; i < ${#tmps[@]}; i++)); do
  verbose "tmps[$i] = \"${tmps[i]}\""
done

# setup arch directory if needed
verbose "setting up arch directory"
mkdir_if_not "$CTL_ARCH"

# setup internal doc directory
verbose "setting up internal docs"
mkdir_if_not "$CTL_ARCH/internal"

# generate directory tree picture
verbose "copying \"$CTL_PIC\" to \"$CTL_ARCH/internal/pic\""
do_or_die echo -e "$CTL_AUTO_GEN_MSG\n"  >"$CTL_ARCH/internal/pic"
do_or_die cat "$CTL_PIC" >>"$CTL_ARCH/internal/pic"

# generate directory tree paths
verbose "copying \"$CTL_TREE\" to \"$CTL_ARCH/internal/tree\""
do_or_die cp "$CTL_TREE" "$CTL_ARCH/internal/tree"
do_or_die cat "$CTL_TREE" >>"$CTL_ARCH/internal/tree"

# generate env doc
verbose "generating env doc..."
do_or_die echo -e "$CTL_AUTO_GEN_MSG\n" >"$CTL_ARCH/internal/env"
do_or_die ./env.awk "$CTL_ENV" >>"$CTL_ARCH/internal/env"

# generate user docs
verbose "setting up user doc directory"
mkdir_if_not "$CTL_ARCH/user"

verbose 'generating doc for each template...'
# for each template
for ((i = 0; i < ${#tmps[@]}; i++)); do
  tmp="${tmps[i]}"               # template name
  hdr="hdr/$tmp"                 # template doc header
  udir="$CTL_ARCH/user/$tmp"     # user doc directory
  idir="$CTL_ARCH/internal/$tmp" # internal doc directory
  tmpsrc="$CTL_TMP/$tmp.h"       # template source
  func="CTL_${tmp^^}_DEF"        # template function name
  idoc="$idir/doc"               # internal doc
  udoc="$udir/doc"               # user doc

  verbose "tmps[$i].name = \"$tmp\""
  verbose "tmps[$i].func = \"$func\""
  verbose "tmps[$i].udoc = \"$udoc\""
  verbose "tmps[$i].idoc = \"$idoc\""
  verbose "tmps[$i].hdr  = \"$hdr\""
  verbose "tmps[$i].src  = \"$tmpsrc\""

  # fail if no header
  if ! [ -e "$hdr" ]; then
    die "\"$tmp\" does not have a header yet" "$CTL_EEXIST"
  fi

  # setup user doc for template
  verbose "setting up user doc directory for $tmp"
  mkdir_if_not "$udir"

  # setup internal doc for template
  verbose "setting up internal doc directory for $tmp"
  mkdir_if_not "$idir"

  # write header to internal doc
  verbose "copying \"$hdr\" to \"$idoc\""
  do_or_die echo -e "$CTL_AUTO_GEN_MSG\n" >"$idoc"
  do_or_die cat "$hdr" >>"$idoc"

  # write header to user doc
  verbose "copying \"$hdr\" to \"$udoc\""
  do_or_die echo -e "AUTO-GENERATED!!! DO NOT MODIFY\n" >"$udoc"
  do_or_die cat "$hdr" >>"$udoc"

  # generate template doc
  verbose "running \"./tmp.awk\" on \"$tmpsrc\" with FUNC=\"$func\", UDOC=\"$udoc\", IDOC=\"$idoc\""
  do_or_die ./tmp.awk \
    -v FUNC="$func"   \
    -v UDOC="$udoc"   \
    -v IDOC="$idoc"   \
    "$tmpsrc"

  verbose "removing last line in $udoc"
  sed -i '$d' "$udoc"

  verbose "removing last line in $idoc"
  sed -i '$d' "$idoc"

  verbose "\"$tmp\" doc created"
done
