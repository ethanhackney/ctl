#!/bin/bash

# bare minimum needed to work
if [ -z "$CTL_ROOT" ]; then
  echo "run_tests: CTL_ROOT undefined" 2>&1
  exit 1
fi
if [ -z "$CTL_ENV" ]; then
  echo "run_tests: CTL_ENV undefined" 2>&1
  exit 1
fi

# source our environment
source "$CTL_ENV"

# source our bash library
source "$CTL_BASH_LIB"

# get test name from path
#
# args:
#  @path: path
#
# ret:
#  test name
test_name() {
  # return name
  echo "$name"
}

# verbose mode?
v=0

# parse args
while [ $# -ne 0 ]; do
  case "$1" in
    -v|--verbose)
      v=1
      shift
      ;;
    *)
      arg_bad "$1" "$0" 
      ;;
  esac
done

# print message if in verbose mode
#
# args:
#  @msg: message
verbose() {
  local msg="$1"

  if [ $v -ne 0 ]; then
    do_or_die echo "$(basename $0): $msg"
  fi
}

# switch to our directory
docdir=$(dirname $0)
verbose "switching to $docdir"
cd "$docdir"

trap "rm -f a.out Makefile" EXIT

verbose 'generating tests...'
# for each test
for t in $CTL_TEST/*.c; do
  file="${t##*/}"
  name="${file%.*}"

  # make sure we match *.c
  ext="${file##*.}"
  if [ "$ext" != 'c' ]; then
    echo "$path is not c source: bad extension" >&2
    exit 1
  fi

  # make sure contents are c
  ft=$(file "$t")
  if [ "$ft" != "$t: C source, ASCII text" ]; then
    echo "$t is not c source: contents not c" >&2
    exit 1
  fi

  # generate test
  verbose "generating test for $name"
  do_or_die "$CTL_MKTEST/$name"

  # generate makefile
  verbose 'generating Makefile'
cat >Makefile <<EOF
main: $t $CTL_LIB/lib.c
$(printf '\t')gcc $CTL_TEST_CFLAGS \$^
EOF

  # compile test
  verbose "compiling $t"
  do_or_die make

  # run it
  verbose 'running test'
  do_or_die ./a.out

  # remove files
  verbose 'removing files'
  do_or_die rm a.out Makefile
done
