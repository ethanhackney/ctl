#!/bin/bash

# run command line and die if it fails:
#
# args:
#  @cmd: command line
do_or_die() {
  "$@"
  local stat=$?
  if [ $stat -ne 0 ]; then
    echo "command failed: $@" >&2
    exit $stat
  fi
}

# write message to stderr:
#
# args:
#  @msg: message to write
stderr() {
  do_or_die printf "$1" >&2
  do_or_die printf "\n"
}

# print message to stderr and exit:
#
# args:
#  @msg:  message
#
# ret:
#  exit process
die() {
  local msg="$1"

  stderr "$(basename $0): $msg"
  exit 1
}

# called when script hits bad argument:
#
# args:
#  @arg:  offending argument
#
# ret:
#  exit process
arg_bad() {
  local arg="$1"

  case "$arg" in
    -*)
      die "$(basename $0): invalid option: $arg"
      ;;
    *)
      die "$(basename $0): unexpected positional paramter: $arg"
      ;;
  esac

  die "$(basename $0): arg_bad: argument is not invalid"
}

# make a directory if it does not already exit:
#
# args:
#  @path: path to directory
mkdir_if_not() {
  local path="$1"

  if ! [ -d "$path" ]; then
    if [ -e "$path" ]; then
      do_or_die rm "$path"
    fi
    do_or_die mkdir "$path"
  fi
}
